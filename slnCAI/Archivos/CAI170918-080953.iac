-- MySqlBackup.NET 2.0.12
-- Dump Time: 2018-09-17 08:09:53
-- --------------------------------------
-- Server version 5.7.22-log MySQL Community Server (GPL)


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES latin1 */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;


-- 
-- Definition of archivos_colaborador
-- 

DROP TABLE IF EXISTS `archivos_colaborador`;
CREATE TABLE IF NOT EXISTS `archivos_colaborador` (
  `idColaborador` varchar(50) NOT NULL,
  `idArchivo` int(11) NOT NULL,
  `rutaArchivo` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`idColaborador`,`idArchivo`),
  CONSTRAINT `archivos_colaborador_ibfk_1` FOREIGN KEY (`idColaborador`) REFERENCES `colaborador` (`numero_Identificacion`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table archivos_colaborador
-- 

/*!40000 ALTER TABLE `archivos_colaborador` DISABLE KEYS */;

/*!40000 ALTER TABLE `archivos_colaborador` ENABLE KEYS */;

-- 
-- Definition of asistencia_participantes
-- 

DROP TABLE IF EXISTS `asistencia_participantes`;
CREATE TABLE IF NOT EXISTS `asistencia_participantes` (
  `idEventoDiario` int(11) NOT NULL,
  `numero_Identificacion` varchar(50) NOT NULL,
  `Asistencia` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idEventoDiario`,`numero_Identificacion`),
  CONSTRAINT `asistencia_participantes_ibfk_1` FOREIGN KEY (`idEventoDiario`) REFERENCES `evento_diario` (`idEventoDiario`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table asistencia_participantes
-- 

/*!40000 ALTER TABLE `asistencia_participantes` DISABLE KEYS */;

/*!40000 ALTER TABLE `asistencia_participantes` ENABLE KEYS */;

-- 
-- Definition of colaborador
-- 

DROP TABLE IF EXISTS `colaborador`;
CREATE TABLE IF NOT EXISTS `colaborador` (
  `numero_Identificacion` varchar(50) NOT NULL,
  `nombre_Completo` varchar(100) DEFAULT NULL,
  `idPuesto` tinyint(4) DEFAULT NULL,
  `email` varchar(100) DEFAULT NULL,
  `tel_Oficina` varchar(25) DEFAULT NULL,
  `ext_Oficina` varchar(10) DEFAULT NULL,
  `celular` varchar(25) DEFAULT NULL,
  `sexo` varchar(20) DEFAULT NULL,
  `fecha_Nacimiento` date DEFAULT NULL,
  `fecha_Ingreso_IAC` date DEFAULT NULL,
  `Ruta_Foto` varchar(75) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`numero_Identificacion`),
  KEY `idPuesto` (`idPuesto`),
  CONSTRAINT `colaborador_ibfk_1` FOREIGN KEY (`idPuesto`) REFERENCES `puesto` (`idPuesto`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table colaborador
-- 

/*!40000 ALTER TABLE `colaborador` DISABLE KEYS */;
INSERT INTO `colaborador`(`numero_Identificacion`,`nombre_Completo`,`idPuesto`,`email`,`tel_Oficina`,`ext_Oficina`,`celular`,`sexo`,`fecha_Nacimiento`,`fecha_Ingreso_IAC`,`Ruta_Foto`,`estado`) VALUES
('114960275','Jose Antonio Bolaños Mejias',1,'jbolanos@utn.ac.cr','2435-5000','8930','8810-9991','Masculino','1992-03-17 00:00:00','2015-01-12 00:00:00','~/Archivos/Fotos/114960275/Jose.jpg',1),
('206130461','Rossmery Cruz Hidalgo',3,'rcruz@utn.ac.cr','2435-5000','8930','8318-3118','Femenino','1985-11-02 00:00:00','2007-01-01 00:00:00','~/Archivos/Fotos/206130461/Maria.jpg',1),
('206220736','Evelyn Barquero Madrigal',1,'ebarquero@utn.ac.cr','2435-5000','8930','6011-4305','Femenino','1986-07-24 00:00:00','2012-01-01 00:00:00','~/Archivos/Fotos/206220736/Maria.jpg',1),
('207120838','María Jose Castro Segura',4,'mcastros@utn.ac.cr','2435-5000','8930','8637-2599','Femenino','1993-06-10 00:00:00','2014-06-10 00:00:00','~/Archivos/Fotos/207120838/Maria.jpg',1);
/*!40000 ALTER TABLE `colaborador` ENABLE KEYS */;

-- 
-- Definition of condicion_equipo
-- 

DROP TABLE IF EXISTS `condicion_equipo`;
CREATE TABLE IF NOT EXISTS `condicion_equipo` (
  `idCondicion` tinyint(4) NOT NULL AUTO_INCREMENT,
  `condicion` varchar(50) DEFAULT NULL,
  `descripcion` varchar(100) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idCondicion`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table condicion_equipo
-- 

/*!40000 ALTER TABLE `condicion_equipo` DISABLE KEYS */;
INSERT INTO `condicion_equipo`(`idCondicion`,`condicion`,`descripcion`,`estado`) VALUES
(1,'Excelente','',1),
(2,'Regular','',1),
(3,'Malo','',1);
/*!40000 ALTER TABLE `condicion_equipo` ENABLE KEYS */;

-- 
-- Definition of datos_iac
-- 

DROP TABLE IF EXISTS `datos_iac`;
CREATE TABLE IF NOT EXISTS `datos_iac` (
  `idIAC` tinyint(4) NOT NULL AUTO_INCREMENT,
  `nombre` varchar(100) DEFAULT NULL,
  `direccion` varchar(200) DEFAULT NULL,
  `email` varchar(100) DEFAULT NULL,
  `telefono1` varchar(25) DEFAULT NULL,
  `ext1` varchar(10) DEFAULT NULL,
  `telefono2` varchar(25) DEFAULT NULL,
  `ext2` varchar(10) DEFAULT NULL,
  `telefono3` varchar(25) DEFAULT NULL,
  `ext3` varchar(10) DEFAULT NULL,
  `rutaLogo` varchar(75) DEFAULT NULL,
  PRIMARY KEY (`idIAC`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table datos_iac
-- 

/*!40000 ALTER TABLE `datos_iac` DISABLE KEYS */;
INSERT INTO `datos_iac`(`idIAC`,`nombre`,`direccion`,`email`,`telefono1`,`ext1`,`telefono2`,`ext2`,`telefono3`,`ext3`,`rutaLogo`) VALUES
(1,'Centro de Acceso a la Información','Costa sur del Parque Central, Alajuela, Edificio Luis Alberto Monge','iac@utn.ac.cr','2435-5000','8930','','','','','~/Archivos/IAC.jpg');
/*!40000 ALTER TABLE `datos_iac` ENABLE KEYS */;

-- 
-- Definition of datos_institucion
-- 

DROP TABLE IF EXISTS `datos_institucion`;
CREATE TABLE IF NOT EXISTS `datos_institucion` (
  `codigo_institucion` tinyint(4) NOT NULL AUTO_INCREMENT,
  `nombre_Institucion` varchar(100) DEFAULT NULL,
  `nombre_Departamento` varchar(100) DEFAULT NULL,
  `idpais` int(11) DEFAULT NULL,
  `telefono_Institucion` varchar(25) DEFAULT NULL,
  `direccion` varchar(200) DEFAULT NULL,
  `idRepresentante` varchar(50) DEFAULT NULL,
  `rutaLogo_Institucion` varchar(75) DEFAULT NULL,
  `rutaLogo_departamento` varchar(75) DEFAULT NULL,
  PRIMARY KEY (`codigo_institucion`),
  KEY `idRepresentante` (`idRepresentante`),
  KEY `idpais` (`idpais`),
  CONSTRAINT `datos_institucion_ibfk_1` FOREIGN KEY (`idRepresentante`) REFERENCES `colaborador` (`numero_Identificacion`),
  CONSTRAINT `datos_institucion_ibfk_2` FOREIGN KEY (`idpais`) REFERENCES `pais` (`idPais`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table datos_institucion
-- 

/*!40000 ALTER TABLE `datos_institucion` DISABLE KEYS */;
INSERT INTO `datos_institucion`(`codigo_institucion`,`nombre_Institucion`,`nombre_Departamento`,`idpais`,`telefono_Institucion`,`direccion`,`idRepresentante`,`rutaLogo_Institucion`,`rutaLogo_departamento`) VALUES
(1,'Universidad Técnica Nacional','Sede Central',60,'2435-5000','Villa Bonita de Alajuela','114960275','~/Archivos/logoUTN.png','~/Archivos/logoUTN.png');
/*!40000 ALTER TABLE `datos_institucion` ENABLE KEYS */;

-- 
-- Definition of diasemana
-- 

DROP TABLE IF EXISTS `diasemana`;
CREATE TABLE IF NOT EXISTS `diasemana` (
  `idDia` int(11) NOT NULL,
  `dia` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`idDia`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table diasemana
-- 

/*!40000 ALTER TABLE `diasemana` DISABLE KEYS */;
INSERT INTO `diasemana`(`idDia`,`dia`) VALUES
(1,'domingo'),
(2,'lunes'),
(3,'martes'),
(4,'miercoles'),
(5,'jueves'),
(6,'viernes'),
(7,'sabado');
/*!40000 ALTER TABLE `diasemana` ENABLE KEYS */;

-- 
-- Definition of equipo
-- 

DROP TABLE IF EXISTS `equipo`;
CREATE TABLE IF NOT EXISTS `equipo` (
  `idEquipo` varchar(50) NOT NULL,
  `placa` varchar(100) DEFAULT NULL,
  `serie` varchar(200) DEFAULT NULL,
  `idMarca` smallint(6) DEFAULT NULL,
  `modelo` varchar(100) DEFAULT NULL,
  `descripcion` varchar(200) DEFAULT NULL,
  `idTipoEquipo` tinyint(4) DEFAULT NULL,
  `costoEquipo` double DEFAULT NULL,
  `idEspacio` tinyint(4) DEFAULT NULL,
  `idEncargado` varchar(50) DEFAULT NULL,
  `idCondicion` tinyint(4) DEFAULT NULL,
  `observaciones` varchar(200) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idEquipo`),
  KEY `idMarca` (`idMarca`),
  KEY `idTipoEquipo` (`idTipoEquipo`),
  KEY `idEspacio` (`idEspacio`),
  KEY `idEncargado` (`idEncargado`),
  KEY `idCondicion` (`idCondicion`),
  CONSTRAINT `equipo_ibfk_1` FOREIGN KEY (`idMarca`) REFERENCES `marca_equipo` (`idMarca`),
  CONSTRAINT `equipo_ibfk_2` FOREIGN KEY (`idTipoEquipo`) REFERENCES `tipo_equipo` (`idTipoEquipo`),
  CONSTRAINT `equipo_ibfk_3` FOREIGN KEY (`idEspacio`) REFERENCES `espacio` (`idEspacio`),
  CONSTRAINT `equipo_ibfk_4` FOREIGN KEY (`idEncargado`) REFERENCES `colaborador` (`numero_Identificacion`),
  CONSTRAINT `equipo_ibfk_5` FOREIGN KEY (`idCondicion`) REFERENCES `condicion_equipo` (`idCondicion`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table equipo
-- 

/*!40000 ALTER TABLE `equipo` DISABLE KEYS */;

/*!40000 ALTER TABLE `equipo` ENABLE KEYS */;

-- 
-- Definition of espacio
-- 

DROP TABLE IF EXISTS `espacio`;
CREATE TABLE IF NOT EXISTS `espacio` (
  `idEspacio` tinyint(4) NOT NULL AUTO_INCREMENT,
  `Espacio` varchar(50) DEFAULT NULL,
  `ubicacion` varchar(100) DEFAULT NULL,
  `idEncargado` varchar(50) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idEspacio`),
  KEY `idEncargado` (`idEncargado`),
  CONSTRAINT `espacio_ibfk_1` FOREIGN KEY (`idEncargado`) REFERENCES `colaborador` (`numero_Identificacion`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table espacio
-- 

/*!40000 ALTER TABLE `espacio` DISABLE KEYS */;
INSERT INTO `espacio`(`idEspacio`,`Espacio`,`ubicacion`,`idEncargado`,`estado`) VALUES
(1,'Training Room','Segundo Piso','114960275',1),
(2,'Internet Room','Primer Piso','206220736',1),
(3,'Mobile Zone','Primer Piso','207120838',1);
/*!40000 ALTER TABLE `espacio` ENABLE KEYS */;

-- 
-- Definition of evento
-- 

DROP TABLE IF EXISTS `evento`;
CREATE TABLE IF NOT EXISTS `evento` (
  `idEvento` int(11) NOT NULL AUTO_INCREMENT,
  `nombre_Evento` varchar(100) DEFAULT NULL,
  `idTipoEvento` tinyint(4) DEFAULT NULL,
  `idEspacio` tinyint(4) DEFAULT NULL,
  `descripcion` varchar(200) DEFAULT NULL,
  `observaciones` varchar(200) DEFAULT NULL,
  `idPeriodo` tinyint(4) DEFAULT NULL,
  `fecha_inicio` date DEFAULT NULL,
  `fecha_final` date DEFAULT NULL,
  `hora_inicio` varchar(20) DEFAULT NULL,
  `hora_final` varchar(20) DEFAULT NULL,
  `cantidad_participantes` tinyint(4) DEFAULT NULL,
  `idInstitucion` smallint(6) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idEvento`),
  KEY `idTipoEvento` (`idTipoEvento`),
  KEY `idEspacio` (`idEspacio`),
  KEY `idPeriodo` (`idPeriodo`),
  KEY `idInstitucion` (`idInstitucion`),
  CONSTRAINT `evento_ibfk_1` FOREIGN KEY (`idTipoEvento`) REFERENCES `tipo_evento` (`idTipoEvento`),
  CONSTRAINT `evento_ibfk_2` FOREIGN KEY (`idEspacio`) REFERENCES `espacio` (`idEspacio`),
  CONSTRAINT `evento_ibfk_3` FOREIGN KEY (`idPeriodo`) REFERENCES `periodo` (`idPeriodo`),
  CONSTRAINT `evento_ibfk_4` FOREIGN KEY (`idInstitucion`) REFERENCES `institucion` (`idInstitucion`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table evento
-- 

/*!40000 ALTER TABLE `evento` DISABLE KEYS */;

/*!40000 ALTER TABLE `evento` ENABLE KEYS */;

-- 
-- Definition of evento_dia_reserva
-- 

DROP TABLE IF EXISTS `evento_dia_reserva`;
CREATE TABLE IF NOT EXISTS `evento_dia_reserva` (
  `idDia` int(11) NOT NULL,
  `idEvento` int(11) NOT NULL,
  `descripcion` varchar(50) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idDia`,`idEvento`),
  KEY `idEvento` (`idEvento`),
  CONSTRAINT `evento_dia_reserva_ibfk_1` FOREIGN KEY (`idEvento`) REFERENCES `evento` (`idEvento`),
  CONSTRAINT `evento_dia_reserva_ibfk_2` FOREIGN KEY (`idDia`) REFERENCES `diasemana` (`idDia`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table evento_dia_reserva
-- 

/*!40000 ALTER TABLE `evento_dia_reserva` DISABLE KEYS */;

/*!40000 ALTER TABLE `evento_dia_reserva` ENABLE KEYS */;

-- 
-- Definition of evento_diario
-- 

DROP TABLE IF EXISTS `evento_diario`;
CREATE TABLE IF NOT EXISTS `evento_diario` (
  `idEventoDiario` int(11) NOT NULL AUTO_INCREMENT,
  `idEvento` int(11) DEFAULT NULL,
  `fecha_EventoDiario` date DEFAULT NULL,
  `hora_inicio` time DEFAULT NULL,
  `hora_final` time DEFAULT NULL,
  `idEncargado` varchar(50) DEFAULT NULL,
  `observaciones_EventoDiario` varchar(200) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idEventoDiario`),
  KEY `idEvento` (`idEvento`),
  KEY `idEncargado` (`idEncargado`),
  CONSTRAINT `evento_diario_ibfk_1` FOREIGN KEY (`idEvento`) REFERENCES `evento` (`idEvento`),
  CONSTRAINT `evento_diario_ibfk_2` FOREIGN KEY (`idEncargado`) REFERENCES `persona` (`numero_identificacion`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table evento_diario
-- 

/*!40000 ALTER TABLE `evento_diario` DISABLE KEYS */;

/*!40000 ALTER TABLE `evento_diario` ENABLE KEYS */;

-- 
-- Definition of evento_tipopersona
-- 

DROP TABLE IF EXISTS `evento_tipopersona`;
CREATE TABLE IF NOT EXISTS `evento_tipopersona` (
  `idEvento` int(11) NOT NULL,
  `idTipoPersona` tinyint(4) NOT NULL,
  `numero_identificacion` varchar(50) NOT NULL,
  `descripcion_Evento_Persona` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`idEvento`,`idTipoPersona`,`numero_identificacion`),
  KEY `idTipoPersona` (`idTipoPersona`),
  KEY `numero_identificacion` (`numero_identificacion`),
  CONSTRAINT `evento_tipopersona_ibfk_1` FOREIGN KEY (`idEvento`) REFERENCES `evento` (`idEvento`),
  CONSTRAINT `evento_tipopersona_ibfk_2` FOREIGN KEY (`idTipoPersona`) REFERENCES `tipo_persona` (`idTipoPersona`),
  CONSTRAINT `evento_tipopersona_ibfk_3` FOREIGN KEY (`numero_identificacion`) REFERENCES `persona` (`numero_identificacion`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table evento_tipopersona
-- 

/*!40000 ALTER TABLE `evento_tipopersona` DISABLE KEYS */;

/*!40000 ALTER TABLE `evento_tipopersona` ENABLE KEYS */;

-- 
-- Definition of institucion
-- 

DROP TABLE IF EXISTS `institucion`;
CREATE TABLE IF NOT EXISTS `institucion` (
  `idInstitucion` smallint(6) NOT NULL AUTO_INCREMENT,
  `nombre_institucion` varchar(50) DEFAULT NULL,
  `observaciones` varchar(100) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idInstitucion`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table institucion
-- 

/*!40000 ALTER TABLE `institucion` DISABLE KEYS */;
INSERT INTO `institucion`(`idInstitucion`,`nombre_institucion`,`observaciones`,`estado`) VALUES
(1,'UTN','',1),
(2,'Sykes','',1),
(3,'Municipalidad de Alajuela','',1);
/*!40000 ALTER TABLE `institucion` ENABLE KEYS */;

-- 
-- Definition of marca_equipo
-- 

DROP TABLE IF EXISTS `marca_equipo`;
CREATE TABLE IF NOT EXISTS `marca_equipo` (
  `idMarca` smallint(6) NOT NULL AUTO_INCREMENT,
  `marca` varchar(100) DEFAULT NULL,
  `observaciones` varchar(200) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idMarca`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table marca_equipo
-- 

/*!40000 ALTER TABLE `marca_equipo` DISABLE KEYS */;
INSERT INTO `marca_equipo`(`idMarca`,`marca`,`observaciones`,`estado`) VALUES
(1,'HP','',1),
(2,'HANSUMG SPARK','',1),
(3,'LG','',1),
(4,'TG','',1),
(5,'Samsung','',1);
/*!40000 ALTER TABLE `marca_equipo` ENABLE KEYS */;

-- 
-- Definition of ocupacion
-- 

DROP TABLE IF EXISTS `ocupacion`;
CREATE TABLE IF NOT EXISTS `ocupacion` (
  `idOcupacion` tinyint(4) NOT NULL AUTO_INCREMENT,
  `descripcion_Ocupacion` varchar(100) DEFAULT NULL,
  `observaciones_Ocupacion` varchar(100) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idOcupacion`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table ocupacion
-- 

/*!40000 ALTER TABLE `ocupacion` DISABLE KEYS */;
INSERT INTO `ocupacion`(`idOcupacion`,`descripcion_Ocupacion`,`observaciones_Ocupacion`,`estado`) VALUES
(1,'Estudiante','',1),
(2,'Administrativo UTN','',1),
(3,'Administrativo Otros Centro','',1),
(4,'Docente UTN','',1),
(5,'Docente Otros Centros','',1),
(6,'Ama de Casa','',1);
/*!40000 ALTER TABLE `ocupacion` ENABLE KEYS */;

-- 
-- Definition of pais
-- 

DROP TABLE IF EXISTS `pais`;
CREATE TABLE IF NOT EXISTS `pais` (
  `idPais` int(11) NOT NULL AUTO_INCREMENT,
  `iso` char(2) DEFAULT NULL,
  `nombre` varchar(80) DEFAULT NULL,
  PRIMARY KEY (`idPais`)
) ENGINE=InnoDB AUTO_INCREMENT=241 DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table pais
-- 

/*!40000 ALTER TABLE `pais` DISABLE KEYS */;
INSERT INTO `pais`(`idPais`,`iso`,`nombre`) VALUES
(1,'AF','Afganistán'),
(2,'AX','Islas Gland'),
(3,'AL','Albania'),
(4,'DE','Alemania'),
(5,'AD','Andorra'),
(6,'AO','Angola'),
(7,'AI','Anguilla'),
(8,'AQ','Antártida'),
(9,'AG','Antigua y Barbuda'),
(10,'AN','Antillas Holandesas'),
(11,'SA','Arabia Saudí'),
(12,'DZ','Argelia'),
(13,'AR','Argentina'),
(14,'AM','Armenia'),
(15,'AW','Aruba'),
(16,'AU','Australia'),
(17,'AT','Austria'),
(18,'AZ','Azerbaiyán'),
(19,'BS','Bahamas'),
(20,'BH','Bahréin'),
(21,'BD','Bangladesh'),
(22,'BB','Barbados'),
(23,'BY','Bielorrusia'),
(24,'BE','Bélgica'),
(25,'BZ','Belice'),
(26,'BJ','Benin'),
(27,'BM','Bermudas'),
(28,'BT','Bhután'),
(29,'BO','Bolivia'),
(30,'BA','Bosnia y Herzegovina'),
(31,'BW','Botsuana'),
(32,'BV','Isla Bouvet'),
(33,'BR','Brasil'),
(34,'BN','Brunéi'),
(35,'BG','Bulgaria'),
(36,'BF','Burkina Faso'),
(37,'BI','Burundi'),
(38,'CV','Cabo Verde'),
(39,'KY','Islas Caimán'),
(40,'KH','Camboya'),
(41,'CM','Camerún'),
(42,'CA','Canadá'),
(43,'CF','República Centroafricana'),
(44,'TD','Chad'),
(45,'CZ','República Checa'),
(46,'CL','Chile'),
(47,'CN','China'),
(48,'CY','Chipre'),
(49,'CX','Isla de Navidad'),
(50,'VA','Ciudad del Vaticano'),
(51,'CC','Islas Cocos'),
(52,'CO','Colombia'),
(53,'KM','Comoras'),
(54,'CD','República Democrática del Congo'),
(55,'CG','Congo'),
(56,'CK','Islas Cook'),
(57,'KP','Corea del Norte'),
(58,'KR','Corea del Sur'),
(59,'CI','Costa de Marfil'),
(60,'CR','Costa Rica'),
(61,'HR','Croacia'),
(62,'CU','Cuba'),
(63,'DK','Dinamarca'),
(64,'DM','Dominica'),
(65,'DO','República Dominicana'),
(66,'EC','Ecuador'),
(67,'EG','Egipto'),
(68,'SV','El Salvador'),
(69,'AE','Emiratos Árabes Unidos'),
(70,'ER','Eritrea'),
(71,'SK','Eslovaquia'),
(72,'SI','Eslovenia'),
(73,'ES','España'),
(74,'UM','Islas ultramarinas de Estados Unidos'),
(75,'US','Estados Unidos'),
(76,'EE','Estonia'),
(77,'ET','Etiopía'),
(78,'FO','Islas Feroe'),
(79,'PH','Filipinas'),
(80,'FI','Finlandia'),
(81,'FJ','Fiyi'),
(82,'FR','Francia'),
(83,'GA','Gabón'),
(84,'GM','Gambia'),
(85,'GE','Georgia'),
(86,'GS','Islas Georgias del Sur y Sandwich del Sur'),
(87,'GH','Ghana'),
(88,'GI','Gibraltar'),
(89,'GD','Granada'),
(90,'GR','Grecia'),
(91,'GL','Groenlandia'),
(92,'GP','Guadalupe'),
(93,'GU','Guam'),
(94,'GT','Guatemala'),
(95,'GF','Guayana Francesa'),
(96,'GN','Guinea'),
(97,'GQ','Guinea Ecuatorial'),
(98,'GW','Guinea-Bissau'),
(99,'GY','Guyana'),
(100,'HT','Haití'),
(101,'HM','Islas Heard y McDonald'),
(102,'HN','Honduras'),
(103,'HK','Hong Kong'),
(104,'HU','Hungría'),
(105,'IN','India'),
(106,'ID','Indonesia'),
(107,'IR','Irán'),
(108,'IQ','Iraq'),
(109,'IE','Irlanda'),
(110,'IS','Islandia'),
(111,'IL','Israel'),
(112,'IT','Italia'),
(113,'JM','Jamaica'),
(114,'JP','Japón'),
(115,'JO','Jordania'),
(116,'KZ','Kazajstán'),
(117,'KE','Kenia'),
(118,'KG','Kirguistán'),
(119,'KI','Kiribati'),
(120,'KW','Kuwait'),
(121,'LA','Laos'),
(122,'LS','Lesotho'),
(123,'LV','Letonia'),
(124,'LB','Líbano'),
(125,'LR','Liberia'),
(126,'LY','Libia'),
(127,'LI','Liechtenstein'),
(128,'LT','Lituania'),
(129,'LU','Luxemburgo'),
(130,'MO','Macao'),
(131,'MK','ARY Macedonia'),
(132,'MG','Madagascar'),
(133,'MY','Malasia'),
(134,'MW','Malawi'),
(135,'MV','Maldivas'),
(136,'ML','Malí'),
(137,'MT','Malta'),
(138,'FK','Islas Malvinas'),
(139,'MP','Islas Marianas del Norte'),
(140,'MA','Marruecos'),
(141,'MH','Islas Marshall'),
(142,'MQ','Martinica'),
(143,'MU','Mauricio'),
(144,'MR','Mauritania'),
(145,'YT','Mayotte'),
(146,'MX','México'),
(147,'FM','Micronesia'),
(148,'MD','Moldavia'),
(149,'MC','Mónaco'),
(150,'MN','Mongolia'),
(151,'MS','Montserrat'),
(152,'MZ','Mozambique'),
(153,'MM','Myanmar'),
(154,'NA','Namibia'),
(155,'NR','Nauru'),
(156,'NP','Nepal'),
(157,'NI','Nicaragua'),
(158,'NE','Níger'),
(159,'NG','Nigeria'),
(160,'NU','Niue'),
(161,'NF','Isla Norfolk'),
(162,'NO','Noruega'),
(163,'NC','Nueva Caledonia'),
(164,'NZ','Nueva Zelanda'),
(165,'OM','Omán'),
(166,'NL','Países Bajos'),
(167,'PK','Pakistán'),
(168,'PW','Palau'),
(169,'PS','Palestina'),
(170,'PA','Panamá'),
(171,'PG','Papúa Nueva Guinea'),
(172,'PY','Paraguay'),
(173,'PE','Perú'),
(174,'PN','Islas Pitcairn'),
(175,'PF','Polinesia Francesa'),
(176,'PL','Polonia'),
(177,'PT','Portugal'),
(178,'PR','Puerto Rico'),
(179,'QA','Qatar'),
(180,'GB','Reino Unido'),
(181,'RE','Reunión'),
(182,'RW','Ruanda'),
(183,'RO','Rumania'),
(184,'RU','Rusia'),
(185,'EH','Sahara Occidental'),
(186,'SB','Islas Salomón'),
(187,'WS','Samoa'),
(188,'AS','Samoa Americana'),
(189,'KN','San Cristóbal y Nevis'),
(190,'SM','San Marino'),
(191,'PM','San Pedro y Miquelón'),
(192,'VC','San Vicente y las Granadinas'),
(193,'SH','Santa Helena'),
(194,'LC','Santa Lucía'),
(195,'ST','Santo Tomé y Príncipe'),
(196,'SN','Senegal'),
(197,'CS','Serbia y Montenegro'),
(198,'SC','Seychelles'),
(199,'SL','Sierra Leona'),
(200,'SG','Singapur'),
(201,'SY','Siria'),
(202,'SO','Somalia'),
(203,'LK','Sri Lanka'),
(204,'SZ','Suazilandia'),
(205,'ZA','Sudáfrica'),
(206,'SD','Sudán'),
(207,'SE','Suecia'),
(208,'CH','Suiza'),
(209,'SR','Surinam'),
(210,'SJ','Svalbard y Jan Mayen'),
(211,'TH','Tailandia'),
(212,'TW','Taiwán'),
(213,'TZ','Tanzania'),
(214,'TJ','Tayikistán'),
(215,'IO','Territorio Británico del Océano Índico'),
(216,'TF','Territorios Australes Franceses'),
(217,'TL','Timor Oriental'),
(218,'TG','Togo'),
(219,'TK','Tokelau'),
(220,'TO','Tonga'),
(221,'TT','Trinidad y Tobago'),
(222,'TN','Túnez'),
(223,'TC','Islas Turcas y Caicos'),
(224,'TM','Turkmenistán'),
(225,'TR','Turquía'),
(226,'TV','Tuvalu'),
(227,'UA','Ucrania'),
(228,'UG','Uganda'),
(229,'UY','Uruguay'),
(230,'UZ','Uzbekistán'),
(231,'VU','Vanuatu'),
(232,'VE','Venezuela'),
(233,'VN','Vietnam'),
(234,'VG','Islas Vírgenes Británicas'),
(235,'VI','Islas Vírgenes de los Estados Unidos'),
(236,'WF','Wallis y Futuna'),
(237,'YE','Yemen'),
(238,'DJ','Yibuti'),
(239,'ZM','Zambia'),
(240,'ZW','Zimbabue');
/*!40000 ALTER TABLE `pais` ENABLE KEYS */;

-- 
-- Definition of periodo
-- 

DROP TABLE IF EXISTS `periodo`;
CREATE TABLE IF NOT EXISTS `periodo` (
  `idPeriodo` tinyint(4) NOT NULL AUTO_INCREMENT,
  `periodo_descripcion` varchar(50) DEFAULT NULL,
  `observaciones` varchar(150) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idPeriodo`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table periodo
-- 

/*!40000 ALTER TABLE `periodo` DISABLE KEYS */;
INSERT INTO `periodo`(`idPeriodo`,`periodo_descripcion`,`observaciones`,`estado`) VALUES
(1,'Bimestre','',1),
(2,'Cuatrimestre','',1),
(3,'Trimestre','',1),
(4,'Semestre','',1),
(5,'Anual','',1);
/*!40000 ALTER TABLE `periodo` ENABLE KEYS */;

-- 
-- Definition of persona
-- 

DROP TABLE IF EXISTS `persona`;
CREATE TABLE IF NOT EXISTS `persona` (
  `numero_identificacion` varchar(50) NOT NULL,
  `nombre_Completo` varchar(100) DEFAULT NULL,
  `email` varchar(100) DEFAULT NULL,
  `sexo` varchar(20) DEFAULT NULL,
  `fecha_Nacimiento` date DEFAULT NULL,
  `celular` varchar(20) DEFAULT NULL,
  `idInstitucion` smallint(6) DEFAULT NULL,
  `idOcupacion` tinyint(4) DEFAULT NULL,
  `idTipoPersona` tinyint(4) DEFAULT NULL,
  `observaciones_Persona` varchar(200) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`numero_identificacion`),
  KEY `idInstitucion` (`idInstitucion`),
  KEY `idOcupacion` (`idOcupacion`),
  KEY `idTipoPersona` (`idTipoPersona`),
  KEY `sexo` (`sexo`),
  CONSTRAINT `persona_ibfk_1` FOREIGN KEY (`idInstitucion`) REFERENCES `institucion` (`idInstitucion`),
  CONSTRAINT `persona_ibfk_2` FOREIGN KEY (`idOcupacion`) REFERENCES `ocupacion` (`idOcupacion`),
  CONSTRAINT `persona_ibfk_3` FOREIGN KEY (`idTipoPersona`) REFERENCES `tipo_persona` (`idTipoPersona`),
  CONSTRAINT `persona_ibfk_4` FOREIGN KEY (`sexo`) REFERENCES `sexo` (`sexoId`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table persona
-- 

/*!40000 ALTER TABLE `persona` DISABLE KEYS */;

/*!40000 ALTER TABLE `persona` ENABLE KEYS */;

-- 
-- Definition of puesto
-- 

DROP TABLE IF EXISTS `puesto`;
CREATE TABLE IF NOT EXISTS `puesto` (
  `idPuesto` tinyint(4) NOT NULL AUTO_INCREMENT,
  `puesto` varchar(100) DEFAULT NULL,
  `observaciones` varchar(150) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idPuesto`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table puesto
-- 

/*!40000 ALTER TABLE `puesto` DISABLE KEYS */;
INSERT INTO `puesto`(`idPuesto`,`puesto`,`observaciones`,`estado`) VALUES
(1,'Operador IAC','',1),
(2,'Rector','',1),
(3,'Coordinador IAC','',1),
(4,'Asistente','',1);
/*!40000 ALTER TABLE `puesto` ENABLE KEYS */;

-- 
-- Definition of seguridad_bitacora
-- 

DROP TABLE IF EXISTS `seguridad_bitacora`;
CREATE TABLE IF NOT EXISTS `seguridad_bitacora` (
  `numero_Identificacion` varchar(50) NOT NULL,
  `fecha_Accion` date NOT NULL,
  `hora_Accion` time NOT NULL,
  `modulo_Accesado` varchar(100) DEFAULT NULL,
  `movimiento_Ejecutado` varchar(200) DEFAULT NULL,
  `observaciones` varchar(800) DEFAULT NULL,
  PRIMARY KEY (`numero_Identificacion`,`fecha_Accion`,`hora_Accion`),
  CONSTRAINT `seguridad_bitacora_ibfk_1` FOREIGN KEY (`numero_Identificacion`) REFERENCES `seguridad_usuario` (`numero_Identificacion`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table seguridad_bitacora
-- 

/*!40000 ALTER TABLE `seguridad_bitacora` DISABLE KEYS */;
INSERT INTO `seguridad_bitacora`(`numero_Identificacion`,`fecha_Accion`,`hora_Accion`,`modulo_Accesado`,`movimiento_Ejecutado`,`observaciones`) VALUES
('114960275','2018-09-14 00:00:00','14:04:06','Institution Data','Update Data','OLD VALUES: 1 - Universidad Técnica Nacional - Edificio Luis Alberto Monge - 60 - 2435-5000 - Villa Bonita de Alajuela - 114960275 - ~/Archivos/logoUTN.png - ~/Archivos/logoUTN.png---------NEW VALUES: 1 - Universidad Técnica Nacional - Sede Central - 60 - 2435-5000 - Villa Bonita de Alajuela - 114960275 - ~/Archivos/logoUTN.png - ~/Archivos/logoUTN.png');
/*!40000 ALTER TABLE `seguridad_bitacora` ENABLE KEYS */;

-- 
-- Definition of seguridad_permiso
-- 

DROP TABLE IF EXISTS `seguridad_permiso`;
CREATE TABLE IF NOT EXISTS `seguridad_permiso` (
  `idPermiso` smallint(6) NOT NULL AUTO_INCREMENT,
  `permiso` varchar(150) DEFAULT NULL,
  `pagina` varchar(100) DEFAULT NULL,
  `url` varchar(250) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idPermiso`)
) ENGINE=InnoDB AUTO_INCREMENT=37 DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table seguridad_permiso
-- 

/*!40000 ALTER TABLE `seguridad_permiso` DISABLE KEYS */;
INSERT INTO `seguridad_permiso`(`idPermiso`,`permiso`,`pagina`,`url`,`estado`) VALUES
(1,'tablero','Principal','index.aspx',1),
(2,'iac','Principal','iac.aspx',1),
(3,'mantenimiento','Principal','mantenimiento.aspx',1),
(4,'procesos','Principal','procesos.aspx',1),
(5,'seguridad','Principal','seguridad.aspx',1),
(6,'reportes','Principal','reportes.aspx',1),
(7,'acercade','Principal','#mdlAcercaDe',1),
(8,'datosins','IAC','#tabInstitucion',1),
(9,'datosiac','IAC','#tabIAC',1),
(10,'datoscolaboradores','IAC','#tabColaboradores',1),
(11,'puesto','Mantenimiento','#tabPuesto',1),
(12,'tipoequipo','Mantenimiento','#tabTipoEquipo',1),
(13,'equipo','Mantenimiento','#tabEquipo',1),
(14,'espacio','Mantenimiento','#tabEspacio',1),
(15,'instituciones','Mantenimiento','#tabInstituciones',1),
(16,'marcas','Mantenimiento','#tabMarcas',1),
(17,'chkcondicion','Mantenimiento','#tabCondicion',1),
(18,'eventos','Procesos','#tabEventos',1),
(19,'eventosdiarios','Procesos','#tabEventoDiario',1),
(20,'participantes','Procesos','#tabParticipante',1),
(21,'chkPersona','Procesos','#tabPersona',1),
(22,'chkTipoPersona','Procesos','#tabTipoPersona',1),
(23,'chkPeriodo','Procesos','#tabPeriodo',1),
(24,'chkOcupacion','Procesos','#tabOcupacion',1),
(25,'chkTipoEvento','Procesos','#tabTipoEvento',1),
(26,'usuarios','Seguridad','#tabUsuarios',1),
(27,'rol','Seguridad','#tabRoles',1),
(28,'permisos','Seguridad','#tabPermisos',1),
(29,'bitacora','Seguridad','#tabBitacora',1),
(30,'backup','Seguridad','#tabBackup',1),
(31,'estadistica','Reporte','#tabEstadistica',1),
(32,'equipo','Reporte','#tabEquipo',1),
(33,'inventario','Reporte','#tabInventario',1),
(34,'eventos','Reporte','#tabEventos',1),
(35,'EventosDiarios','Reporte','#tabEventoDiarios',1),
(36,'asistencia','Reporte','#tabAsistencia',1);
/*!40000 ALTER TABLE `seguridad_permiso` ENABLE KEYS */;

-- 
-- Definition of seguridad_rol
-- 

DROP TABLE IF EXISTS `seguridad_rol`;
CREATE TABLE IF NOT EXISTS `seguridad_rol` (
  `idRol` tinyint(4) NOT NULL AUTO_INCREMENT,
  `rol` varchar(100) DEFAULT NULL,
  `descripcion` varchar(150) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idRol`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table seguridad_rol
-- 

/*!40000 ALTER TABLE `seguridad_rol` DISABLE KEYS */;
INSERT INTO `seguridad_rol`(`idRol`,`rol`,`descripcion`,`estado`) VALUES
(1,'Administrador','',1);
/*!40000 ALTER TABLE `seguridad_rol` ENABLE KEYS */;

-- 
-- Definition of seguridad_rol_permiso
-- 

DROP TABLE IF EXISTS `seguridad_rol_permiso`;
CREATE TABLE IF NOT EXISTS `seguridad_rol_permiso` (
  `idpermiso` smallint(6) NOT NULL,
  `idRol` tinyint(4) NOT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idpermiso`,`idRol`),
  KEY `idRol` (`idRol`),
  CONSTRAINT `seguridad_rol_permiso_ibfk_1` FOREIGN KEY (`idpermiso`) REFERENCES `seguridad_permiso` (`idPermiso`),
  CONSTRAINT `seguridad_rol_permiso_ibfk_2` FOREIGN KEY (`idRol`) REFERENCES `seguridad_rol` (`idRol`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table seguridad_rol_permiso
-- 

/*!40000 ALTER TABLE `seguridad_rol_permiso` DISABLE KEYS */;
INSERT INTO `seguridad_rol_permiso`(`idpermiso`,`idRol`,`estado`) VALUES
(1,1,1),
(2,1,1),
(3,1,1),
(4,1,1),
(5,1,1),
(6,1,1),
(7,1,1),
(8,1,1),
(9,1,1),
(10,1,1),
(11,1,1),
(12,1,1),
(13,1,1),
(14,1,1),
(15,1,1),
(16,1,1),
(17,1,1),
(18,1,1),
(19,1,1),
(20,1,1),
(21,1,1),
(22,1,1),
(23,1,1),
(24,1,1),
(25,1,1),
(26,1,1),
(27,1,1),
(28,1,1),
(29,1,1),
(30,1,1),
(31,1,1),
(32,1,1),
(33,1,1),
(34,1,1),
(35,1,1),
(36,1,1);
/*!40000 ALTER TABLE `seguridad_rol_permiso` ENABLE KEYS */;

-- 
-- Definition of seguridad_usuario
-- 

DROP TABLE IF EXISTS `seguridad_usuario`;
CREATE TABLE IF NOT EXISTS `seguridad_usuario` (
  `numero_Identificacion` varchar(50) NOT NULL,
  `nombre_Completo` varchar(100) DEFAULT NULL,
  `usuario` varchar(50) DEFAULT NULL,
  `contrasenna` blob,
  `idRol_Usuario` tinyint(4) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  `activo` bit(1) DEFAULT NULL,
  `ingreso` int(11) DEFAULT '0',
  PRIMARY KEY (`numero_Identificacion`),
  KEY `idRol_Usuario` (`idRol_Usuario`),
  CONSTRAINT `seguridad_usuario_ibfk_1` FOREIGN KEY (`idRol_Usuario`) REFERENCES `seguridad_rol` (`idRol`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table seguridad_usuario
-- 

/*!40000 ALTER TABLE `seguridad_usuario` DISABLE KEYS */;
INSERT INTO `seguridad_usuario`(`numero_Identificacion`,`nombre_Completo`,`usuario`,`contrasenna`,`idRol_Usuario`,`estado`,`activo`,`ingreso`) VALUES
('114960275','Jose Antonio Bolaños Mejias','jose3215',0x56F3918F56604A90994B6984FDAD5BDD,1,1,1,1);
/*!40000 ALTER TABLE `seguridad_usuario` ENABLE KEYS */;

-- 
-- Definition of sexo
-- 

DROP TABLE IF EXISTS `sexo`;
CREATE TABLE IF NOT EXISTS `sexo` (
  `sexoId` varchar(20) NOT NULL,
  `descripcion` varchar(40) DEFAULT NULL,
  PRIMARY KEY (`sexoId`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table sexo
-- 

/*!40000 ALTER TABLE `sexo` DISABLE KEYS */;
INSERT INTO `sexo`(`sexoId`,`descripcion`) VALUES
('female','female'),
('male','male');
/*!40000 ALTER TABLE `sexo` ENABLE KEYS */;

-- 
-- Definition of tareas_colaborador
-- 

DROP TABLE IF EXISTS `tareas_colaborador`;
CREATE TABLE IF NOT EXISTS `tareas_colaborador` (
  `idColaborador` varchar(50) NOT NULL,
  `idTarea` int(11) NOT NULL,
  `tarea` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`idColaborador`,`idTarea`),
  CONSTRAINT `tareas_colaborador_ibfk_1` FOREIGN KEY (`idColaborador`) REFERENCES `colaborador` (`numero_Identificacion`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table tareas_colaborador
-- 

/*!40000 ALTER TABLE `tareas_colaborador` DISABLE KEYS */;
INSERT INTO `tareas_colaborador`(`idColaborador`,`idTarea`,`tarea`) VALUES
('114960275',1,'Capacitaciones'),
('114960275',2,'Soporte Técnico a laboratorios'),
('206130461',1,'Capacitaciones'),
('206130461',2,'Soporte Técnico a laboratorios'),
('206130461',3,'Documentación del Centro'),
('206130461',4,'Coordinación de los proyectos'),
('206220736',1,'Capacitaciones'),
('206220736',2,'Soporte Técnico a laboratorios'),
('207120838',1,'Documentación del Centro'),
('207120838',2,'Capacitaciones');
/*!40000 ALTER TABLE `tareas_colaborador` ENABLE KEYS */;

-- 
-- Definition of tipo_equipo
-- 

DROP TABLE IF EXISTS `tipo_equipo`;
CREATE TABLE IF NOT EXISTS `tipo_equipo` (
  `idTipoEquipo` tinyint(4) NOT NULL AUTO_INCREMENT,
  `tipoEquipo` varchar(100) DEFAULT NULL,
  `observaciones` varchar(200) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idTipoEquipo`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table tipo_equipo
-- 

/*!40000 ALTER TABLE `tipo_equipo` DISABLE KEYS */;
INSERT INTO `tipo_equipo`(`idTipoEquipo`,`tipoEquipo`,`observaciones`,`estado`) VALUES
(1,'Computadora','',1),
(2,'Tableta','',1),
(3,'Proyector','',1),
(4,'Planta de Audio','',1),
(5,'Monitor','',1),
(6,'CPU','',1);
/*!40000 ALTER TABLE `tipo_equipo` ENABLE KEYS */;

-- 
-- Definition of tipo_evento
-- 

DROP TABLE IF EXISTS `tipo_evento`;
CREATE TABLE IF NOT EXISTS `tipo_evento` (
  `idTipoEvento` tinyint(4) NOT NULL AUTO_INCREMENT,
  `tipoEvento_descripcion` varchar(100) DEFAULT NULL,
  `observaciones` varchar(150) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idTipoEvento`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table tipo_evento
-- 

/*!40000 ALTER TABLE `tipo_evento` DISABLE KEYS */;
INSERT INTO `tipo_evento`(`idTipoEvento`,`tipoEvento_descripcion`,`observaciones`,`estado`) VALUES
(1,'Capacitacion','',1),
(2,'Curso','',1),
(3,'Taller','',1),
(4,'Uso del Laboratorio','',1);
/*!40000 ALTER TABLE `tipo_evento` ENABLE KEYS */;

-- 
-- Definition of tipo_persona
-- 

DROP TABLE IF EXISTS `tipo_persona`;
CREATE TABLE IF NOT EXISTS `tipo_persona` (
  `idTipoPersona` tinyint(4) NOT NULL AUTO_INCREMENT,
  `descripcion` varchar(50) DEFAULT NULL,
  `observaciones` varchar(100) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idTipoPersona`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table tipo_persona
-- 

/*!40000 ALTER TABLE `tipo_persona` DISABLE KEYS */;
INSERT INTO `tipo_persona`(`idTipoPersona`,`descripcion`,`observaciones`,`estado`) VALUES
(1,'Participante','',1),
(2,'Solicitante','',1),
(3,'Encargado','',1);
/*!40000 ALTER TABLE `tipo_persona` ENABLE KEYS */;

-- 
-- Definition of tipoequipo_espacio
-- 

DROP TABLE IF EXISTS `tipoequipo_espacio`;
CREATE TABLE IF NOT EXISTS `tipoequipo_espacio` (
  `idTipoEquipo` tinyint(4) NOT NULL,
  `idEspacio` tinyint(4) NOT NULL,
  `cantidad` tinyint(4) DEFAULT NULL,
  `observaciones` varchar(200) DEFAULT NULL,
  `estado` bit(1) DEFAULT NULL,
  PRIMARY KEY (`idTipoEquipo`,`idEspacio`),
  KEY `idEspacio` (`idEspacio`),
  CONSTRAINT `tipoequipo_espacio_ibfk_1` FOREIGN KEY (`idEspacio`) REFERENCES `espacio` (`idEspacio`),
  CONSTRAINT `tipoequipo_espacio_ibfk_2` FOREIGN KEY (`idTipoEquipo`) REFERENCES `tipo_equipo` (`idTipoEquipo`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- 
-- Dumping data for table tipoequipo_espacio
-- 

/*!40000 ALTER TABLE `tipoequipo_espacio` DISABLE KEYS */;
INSERT INTO `tipoequipo_espacio`(`idTipoEquipo`,`idEspacio`,`cantidad`,`observaciones`,`estado`) VALUES
(1,1,26,'',1),
(1,2,18,'',1),
(2,2,8,'',1),
(2,3,10,'',1),
(3,1,1,'',1),
(3,2,1,'',1),
(4,1,1,'',1);
/*!40000 ALTER TABLE `tipoequipo_espacio` ENABLE KEYS */;

-- 
-- Dumping procedures
-- 

DROP PROCEDURE IF EXISTS `EventoDiario`;
DELIMITER |
CREATE PROCEDURE `EventoDiario`(idEventoDiariop int, idEventop int, fecha_EventoDiariop date, hora_iniciop time, hora_finalp time, idEncargadop varchar(50), observaciones_EventoDiariop varchar(200))
BEGIN
if exists (select * from db_cai.evento_diario where idEventoDiario = idEventoDiariop) then
update db_cai.evento_diario
set idEvento=idEventop, fecha_EventoDiario=fecha_EventoDiariop,hora_inicio=hora_iniciop,hora_final=hora_finalp,idEncargado=idEncargadop,observaciones_EventoDiario=observaciones_EventoDiariop
where idEventoDiario = idEventoDiariop;
else
insert into db_cai.evento_diario (idEventoDiario,idEvento,fecha_EventoDiario,hora_inicio,hora_final,idEncargado,observaciones_EventoDiario)
values (idEventoDiariop,idEventop,fecha_EventoDiariop,hora_iniciop,hora_finalp,idEncargadop,observaciones_EventoDiariop);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_DatosIac`;
DELIMITER |
CREATE PROCEDURE `sp_DatosIac`(idIACp int, nombrep varchar(100), direccionp varchar(200), emailp varchar(100), telefono1p varchar(25), ext1p varchar(10), telefono2p varchar(25), ext2p varchar(10), telefono3p varchar(25), ext3p varchar(10), rutaLogop varchar(75))
BEGIN
if exists (select * from db_cai.datos_iac where idIAC = idIACp) then
update db_cai.datos_iac
set nombre = nombrep, direccion = direccionp, email=emailp, telefono1=telefono1p, ext1=ext1p, telefono2=telefono2p, ext2=ext2p, telefono3=telefono3p, ext3=ext3p, rutaLogo=rutaLogop
where idIAC = idIACp;
else
insert into db_cai.datos_iac(idIAC, nombre, direccion, email, telefono1, ext1, telefono2, ext2, telefono3, ext3, rutaLogo)
values (idIACp, nombrep, direccionp, emailp, telefono1p, ext1p, telefono2p, ext2p, telefono3p, ext3p, rutaLogop);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_DatosIacCol`;
DELIMITER |
CREATE PROCEDURE `sp_DatosIacCol`(numero_Identificacionp varchar(50), nombre_Completop varchar(100),idPuestop int,emailp varchar(100),tel_Oficinap varchar(25),ext_Oficinap varchar(10), celularp varchar(25),sexop varchar(20),fecha_Nacimientop date,fecha_Ingreso_IACp date,Ruta_Fotop varchar(75))
BEGIN
if exists (select * from db_cai.colaborador where numero_Identificacion = numero_Identificacionp) then
update db_cai.colaborador
set nombre_Completo=nombre_Completop,idPuesto=idPuestop,email=emailp,tel_Oficina=tel_Oficinap,ext_Oficina=ext_Oficinap,celular=celularp,sexo=sexop,fecha_Nacimiento=fecha_Nacimientop,fecha_Ingreso_IAC=fecha_Ingreso_IACp,Ruta_Foto=Ruta_Fotop
where numero_Identificacion = numero_Identificacionp;
else
insert into db_cai.colaborador(numero_Identificacion,nombre_Completo,idPuesto,email,tel_Oficina,ext_Oficina,celular,sexo,fecha_Nacimiento,fecha_Ingreso_IAC,Ruta_Foto,estado)
values (numero_Identificacionp,nombre_Completop,idPuestop,emailp,tel_Oficinap,ext_Oficinap,celularp,sexop,fecha_Nacimientop,fecha_Ingreso_IACp,Ruta_Fotop,1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_DatosIacIns`;
DELIMITER |
CREATE PROCEDURE `sp_DatosIacIns`(codigo_institucion int, nombre_Institucion varchar(100), nombre_Departamento varchar(100), idpais int, telefono_Institucion varchar(25), direccion varchar(200), idRepresentante varchar(50), rutaLogo_Institucion varchar(75), rutaLogo_departamento varchar(75))
BEGIN
if exists (select * from db_cai.datos_institucion where codigo_institucion = codigo_institucionp) then
update db_cai.datos_institucion
set nombre_Institucion = nombre_Institucionp, nombre_Departamento=nombre_Departamentop,idpais=idpaisp,telefono_Institucion=telefono_Institucionp,direccion=direccionp,idRepresentante=idRepresentantep,rutaLogo_Institucion=rutaLogo_Institucionp,rutaLogo_departamento=rutaLogo_departamentop
where codigo_institucion = codigo_institucionp;
else
insert into db_cai.datos_institucion(codigo_institucion,nombre_Institucion,nombre_Departamento,idpais,telefono_Institucion,direccion,idRepresentante,rutaLogo_Institucion,rutaLogo_departamento)
values (codigo_institucionp,nombre_Institucionp,nombre_Departamentop,idpaisp,telefono_Institucionp,direccionp,idRepresentantep,rutaLogo_Institucionp,rutaLogo_departamentop);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_DatosIns`;
DELIMITER |
CREATE PROCEDURE `sp_DatosIns`(codigo_institucionp int, nombre_Institucionp varchar(100),nombre_Departamentop varchar(100), idpaisp int, telefono_Institucionp varchar(25), direccionp varchar(200), idRepresentantep varchar(50), rutaLogo_Institucionp varchar(75), rutaLogo_departamentop varchar(75))
BEGIN
if exists (select * from db_cai.datos_institucion where codigo_institucion = codigo_institucionp) then
update db_cai.datos_institucion
set nombre_Institucion =codigo_institucionp, nombre_Institucion=nombre_Institucionp,nombre_Departamento=nombre_Departamentop,idpais=idpaisp,telefono_Institucion=telefono_Institucionp,direccion=direccionp,idRepresentante=idRepresentantep,rutaLogo_Institucion=rutaLogo_Institucionp,rutaLogo_departamento=rutaLogo_departamentop
where codigo_institucion = codigo_institucionp;
else
insert into db_cai.datos_institucion(codigo_institucion,nombre_Institucion,nombre_Departamento,idpais,telefono_Institucion,direccion,idRepresentante,rutaLogo_Institucion,rutaLogo_departamento)
values (codigo_institucionp,nombre_Institucionp,nombre_Departamentop,idpaisp,telefono_Institucionp,direccionp,idRepresentantep,rutaLogo_Institucionp,rutaLogo_departamentop);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_Evento`;
DELIMITER |
CREATE PROCEDURE `sp_Evento`(idEventop int, nombre_Eventop varchar(100), idTipoEventop int, idEspaciop int, descripcionp varchar(200), observacionesp varchar(200), idPeriodop int, fecha_iniciop date, fecha_finalp date, hora_iniciop varchar(20), hora_finalp varchar(20), cantidad_participantesp int, idInstitucionp int)
BEGIN
if exists (select * from db_cai.evento where idEvento = idEventop) then
update db_cai.evento
set nombre_Evento = nombre_Eventop , idTipoEvento = idTipoEventop , idEspacio = idEspaciop,descripcion=descripcionp,observaciones=observacionesp,idPeriodo=idPeriodop,fecha_inicio=fecha_iniciop,fecha_final=fecha_finalp,hora_inicio=hora_iniciop,hora_final=hora_finalp,cantidad_participantes=cantidad_participantesp,idInstitucion=idInstitucionp, estado=1
where idEvento = idEventop;
else
insert into db_cai.evento (nombre_Evento,idTipoEvento,idEspacio,descripcion,observaciones,idPeriodo,fecha_inicio,fecha_final,hora_inicio,hora_final,cantidad_participantes,idInstitucion,estado)
values (nombre_Eventop ,idTipoEventop,idEspaciop,descripcionp,observacionesp,idPeriodop,fecha_iniciop,fecha_finalp,hora_iniciop,hora_finalp,cantidad_participantesp,idInstitucionp,1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_EventoDiario`;
DELIMITER |
CREATE PROCEDURE `sp_EventoDiario`(idEventoDiariop int, idEventop int, fecha_EventoDiariop date, hora_iniciop time, hora_finalp time, idEncargadop varchar(50), observaciones_EventoDiariop varchar(200))
BEGIN
if exists (select * from db_cai.evento_diario where idEventoDiario = idEventoDiariop) then
update db_cai.evento_diario
set idEvento=idEventop, fecha_EventoDiario=fecha_EventoDiariop,hora_inicio=hora_iniciop,hora_final=hora_finalp,idEncargado=idEncargadop,observaciones_EventoDiario=observaciones_EventoDiariop
where idEventoDiario = idEventoDiariop;
else
insert into db_cai.evento_diario (idEvento,fecha_EventoDiario,hora_inicio,hora_final,idEncargado,observaciones_EventoDiario)
values (idEventop,fecha_EventoDiariop,hora_iniciop,hora_finalp,idEncargadop,observaciones_EventoDiariop);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GraficoMensual`;
DELIMITER |
CREATE PROCEDURE `sp_GraficoMensual`(asistenciap int, mesp int, annop int)
begin
select ep.Espacio, count(numero_Identificacion) as participantes
from asistencia_participantes a
inner join evento_diario ed on a.idEventoDiario = ed.idEventoDiario
inner join evento e on ed.idEvento = e.idEvento
inner join espacio ep on e.idEspacio = ep.idEspacio
where a.Asistencia = asistenciap and month(ed.fecha_EventoDiario) = mesp and year(ed.fecha_EventoDiario) = annop
group by e.idEspacio;
end |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GraficoPrincipal`;
DELIMITER |
CREATE PROCEDURE `sp_GraficoPrincipal`(idEspaciop int)
BEGIN
select Espacio, Sum(January) January, Sum(February) February, Sum(March) March, Sum(April) April,Sum(June) June, Sum(July) July,Sum(August) August,
Sum(September) September,Sum(November) November,Sum(December) December
from
(select es.Espacio as Espacio, es.idEspacio as idEspacio,(case when monthname(ed.fecha_EventoDiario) = 'January' then Count(*) else 0 end) as January,
(case when monthname(ed.fecha_EventoDiario) = 'February' then Count(*) else 0 end) February,
(case when monthname(ed.fecha_EventoDiario) = 'March' then Count(*) else 0  end) March,
(case when monthname(ed.fecha_EventoDiario) = 'April' then Count(*) else 0 end) April,
(case when monthname(ed.fecha_EventoDiario) = 'June' then Count(*) else 0 end) June,
(case when monthname(ed.fecha_EventoDiario) = 'July' then Count(*) else 0 end) July,
(case when monthname(ed.fecha_EventoDiario) = 'August' then Count(*) else 0  end) August,
(case when monthname(ed.fecha_EventoDiario) = 'September' then Count(*) else 0 end) September,
(case when monthname(ed.fecha_EventoDiario) = 'November' then Count(*) else 0  end) November,
(case when monthname(ed.fecha_EventoDiario) = 'December' then Count(*) else 0 end) December
from evento_diario ed
inner join asistencia_participantes a on a.idEventoDiario = ed.idEventoDiario
inner join evento e on e.idEvento = ed.idEvento
inner join espacio es on  es.idEspacio = e.idEspacio
where a.Asistencia = 1 and e.idEspacio = idEspaciop and year(fecha_EventoDiario) = year(now())
group by month(fecha_EventoDiario) order by month(fecha_EventoDiario)) a;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarArchivoColaborador`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarArchivoColaborador`(idColaboradorp varchar(50),rutaArchivop varchar(200), idArchivop int)
BEGIN
if exists (select * from db_cai.archivos_colaborador where idColaborador = idColaboradorp and idArchivo = idArchivop ) then
update db_cai.archivos_colaborador
set rutaArchivo = rutaArchivop, idArchivo = idArchivop
where idColaborador = idColaboradorp and idArchivo = idArchivop;
else
insert into db_cai.archivos_colaborador (idColaborador,rutaArchivo, idArchivo)
values (idColaboradorp,rutaArchivop,idArchivop);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarAsistenciaParticipante`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarAsistenciaParticipante`(idEventoDiariop int, numero_Identificacionp varchar(50),Asistenciap bit)
BEGIN
if exists (select * from db_cai.asistencia_participantes where idEventoDiario = idEventoDiariop and numero_identificacion = numero_Identificacionp) then
update db_cai.asistencia_participantes
set Asistencia = Asistenciap
where idEventoDiario = idEventoDiariop and numero_identificacion = numero_Identificacionp;
else
insert into db_cai.asistencia_participantes (idEventoDiario,numero_identificacion,Asistencia)
values (idEventoDiariop,numero_Identificacionp,Asistenciap);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarCondicion`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarCondicion`(idCondicionp int, Condicionp varchar(100),Observacionesp varchar(150))
BEGIN
if exists (select * from db_cai.condicion_equipo where idCondicion = idCondicionp) then
update db_cai.condicion_equipo
set condicion = Condicionp, descripcion = observacionesp, estado = 1
where idCondicion = idCondicionp;
else
insert into db_cai.condicion_equipo (condicion,descripcion,estado)
values (Condicionp,Observacionesp,1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarDiasReserva`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarDiasReserva`(idEventop int,idDiap int,estadop bit)
BEGIN
if exists (select * from db_cai.evento_dia_reserva where idEvento = idEventop and idDia = idDiap) then
update db_cai.evento_dia_reserva
set estado = estadop
where idEvento = idEventop and idDia = idDiap;
else
insert into db_cai.evento_dia_reserva (idEvento,idDia,estado)
values (idEventop,idDiap,estadop);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarEquipo`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarEquipo`(idEquipop varchar(50), placap varchar(100), seriep varchar(100), idMarcap int, Estadop int, modelop varchar(100), descripp varchar(100), idTipoEquipop int, costop varchar(100), idEspaciop int, idEncargadop int, idCondicionp int, Observacionp varchar(100))
BEGIN
if exists (select * from db_cai.equipo where idEquipo = idEquipop) then
update db_cai.equipo
set placa = placap, serie = seriep, idMarca = idMarcap, modelo = modelop, descripcion = descripp, idTipoEquipo = idTipoEquipop, costoEquipo = costop, idEspacio = idEspaciop, idEncargado = idEncargadop, idCondicion = idCondicionp, observaciones = Observacionp, estado = Estadop
where idEquipo = idEquipop;
else
insert into db_cai.equipo (idEquipo,placa, serie, idMarca, modelo, descripcion, idTipoEquipo, costoEquipo, idEspacio, idEncargado, idCondicion, observaciones, estado)
values (idEquipop,placap, seriep, idMarcap, modelop, descripp, idTipoEquipop, costop, idEspaciop, idEncargadop, idCondicionp, Observacionp,Estadop);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarEspacio`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarEspacio`(idEspaciop int, Espaciop varchar(50),Ubicacionp varchar(100),idEncargadop varchar(50))
BEGIN
if exists (select * from db_cai.espacio where idEspacio = idEspaciop) then
update db_cai.espacio
set Espacio = Espaciop, ubicacion = Ubicacionp, idEncargado = idEncargadop, estado = 1
where idEspacio = idEspaciop;
else
insert into db_cai.espacio (Espacio,ubicacion,idEncargado,estado)
values (Espaciop,Ubicacionp,idEncargadop,1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarEventoDiario`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarEventoDiario`(idEventoDiariop int, idEventop int, fecha_EventoDiariop date, hora_iniciop time, hora_finalp time, idEncargadop varchar(50), observaciones_EventoDiariop varchar(200))
BEGIN
if exists (select * from db_cai.evento_diario where idEventoDiario = idEventoDiariop) then
update db_cai.evento_diario
set idEvento=idEventop, fecha_EventoDiario=fecha_EventoDiariop,hora_inicio=hora_iniciop,hora_final=hora_finalp,idEncargado=idEncargadop,observaciones_EventoDiario=observaciones_EventoDiariop, estado = 1
where idEventoDiario = idEventoDiariop;
else
insert into db_cai.evento_diario (idEvento,fecha_EventoDiario,hora_inicio,hora_final,idEncargado,observaciones_EventoDiario,estado)
values (idEventop,fecha_EventoDiariop,hora_iniciop,hora_finalp,idEncargadop,observaciones_EventoDiariop,1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarInstitucion`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarInstitucion`(idInstitucionp int, nombre_institucionp varchar(100),Observacionesp varchar(150))
BEGIN
if exists (select * from db_cai.institucion where idInstitucion = idInstitucionp) then
update db_cai.institucion
set nombre_institucion = nombre_institucionp, observaciones = observacionesp, estado = 1
where idInstitucion = idInstitucionp;
else
insert into db_cai.institucion (nombre_institucion,observaciones,estado)
values (nombre_institucionp,Observacionesp,1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarMarcaEquipo`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarMarcaEquipo`(idMarcaEquipop int,MarcaEquipop varchar(100),Observacionesp varchar(150))
BEGIN
if exists (select * from db_cai.marca_equipo where idMarca = idMarcaEquipop) then
update db_cai.marca_equipo
set marca = MarcaEquipop, observaciones = observacionesp, estado = 1
where idMarca = idMarcaEquipop;
else
insert into db_cai.marca_equipo (marca,observaciones,estado)
values (MarcaEquipop,Observacionesp,1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarParticipants`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarParticipants`(idEventop int, idTipoPersonap int, numero_identificacionp int)
BEGIN
if exists (select * from db_cai.evento_tipopersona where idEvento = idEventop and numero_identificacion = numero_identificacionp) then
update db_cai.evento_tipopersona
set idEvento = idEventop, idTipoPersona = idTipoPersonap, numero_identificacion = numero_identificacionp
where idEvento = idEventop and numero_identificacion = numero_identificacionp;
else
insert into db_cai.evento_tipopersona (idEvento, idTipoPersona, numero_identificacion)
values (idEventop, idTipoPersonap, numero_identificacionp);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarPersona`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarPersona`(idPersonap varchar(100), nombre_Completop varchar(100), emailp varchar(100), sexop varchar(100), fecha_Nacimientop varchar(100), celularp varchar(100), idInstitucionp int, idOcupacionp int, idTipoPersonap int, observaciones_Personap varchar(100), estadop bit)
BEGIN
if exists (select * from db_cai.persona where numero_Identificacion = idPersonap) then
update db_cai.persona
set nombre_Completo = nombre_Completop, email = emailp, sexo = sexop, fecha_Nacimiento = fecha_Nacimientop, celular = celularp, idInstitucion = idInstitucionp, idOcupacion = idOcupacionp, idTipoPersona = idTipoPersonap, observaciones_Persona = observaciones_Personap , estado = 1
where numero_Identificacion = idPersonap;
else
insert into db_cai.persona (numero_identificacion,nombre_Completo, email, sexo, fecha_Nacimiento, celular, idInstitucion, idOcupacion, idTipoPersona, observaciones_Persona, estado)
values (idPersonap,nombre_Completop, emailp, sexop, fecha_Nacimientop, celularp, idInstitucionp, idOcupacionp, idTipoPersonap, observaciones_Personap, 1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarPersonaEvento`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarPersonaEvento`(idPersonap varchar(50),idEventop int,idTipoPersonap int)
BEGIN
if exists (select * from db_cai.evento_tipopersona where idTipoPersona = idTipoPersonap and idEvento = idEventop) then
update db_cai.evento_tipopersona
set numero_identificacion = idPersonap
where idTipoPersona = idTipoPersonap and idEvento = idEventop;
else
insert into db_cai.evento_tipopersona (idEvento,idTipoPersona,numero_identificacion)
values (idEventop,idTipoPersonap,idPersonap);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarPuesto`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarPuesto`(idPuestop int,Puestop varchar(100),Observacionesp varchar(150))
BEGIN
if exists (select * from db_cai.puesto where idPuesto = idPuestop) then
update db_cai.puesto
set puesto = Puestop, observaciones = observacionesp, estado = 1
where idPuesto = idPuestop;
else
insert into db_cai.puesto (puesto,observaciones,estado)
values (Puestop,Observacionesp,1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarRol`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarRol`(idrolp int,Rolp varchar(100),descriptionp varchar(500))
BEGIN
if exists (select * from db_cai.seguridad_rol where idRol = idrolp) then
update db_cai.seguridad_rol
set rol = Rolp, descripcion = descriptionp, estado = 1
where idRol = idrolp;
else
insert into db_cai.seguridad_rol (idRol,rol,descripcion,estado)
values (idrolp,Rolp,descriptionp,1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarRolPermiso`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarRolPermiso`(idRolp int,idPermisop int,estadop bit)
BEGIN
if exists (select * from db_cai.seguridad_rol_permiso where idRol = idRolp and idPermiso = idPermisop) then
update db_cai.seguridad_rol_permiso
set estado = estadop
where idRol = idRolp and idPermiso = idPermisop;
else
insert into db_cai.seguridad_rol_permiso (idRol,idPermiso,estado)
values (idRolp,idPermisop,estadop);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarSeguridad`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarSeguridad`(numero varchar(100),nombre varchar(100),usuariop varchar(100), contrasennap varchar(100), idRolp int)
BEGIN
if exists (select * from db_cai.seguridad_usuario where numero_Identificacion = numero) then
update db_cai.seguridad_usuario
set nombre_Completo = nombre, usuario = usuariop, contrasenna = AES_ENCRYPT(contrasennap,'14C_CR%'), idrol_Usuario = idrolp, estado = 1
where numero_Identificacion = numero;
else
insert into db_cai.seguridad_usuario (numero_Identificacion,nombre_Completo,usuario,contrasenna,idrol_Usuario,estado)
values (numero,nombre,usuariop,AES_ENCRYPT(contrasennap,'14C_CR%'),idrolp,1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarSeguridadRol`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarSeguridadRol`(idrol int,Rol varchar(100),description varchar(500))
BEGIN
if exists (select * from db_cai.seguridad_rol where idRol = idrol) then
update db_cai.seguridad_rol
set rol = Rol, descripcion = description, estado = 1
where idRol = idrol;
else
insert into db_cai.seguridad_rol (idRol,rol,descripcion,estado)
values (idrol,Rol,description,1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarTareaColaborador`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarTareaColaborador`(idColaboradorp varchar(50),tareap varchar(200), idTareap int)
BEGIN
if exists (select * from db_cai.tareas_colaborador where idColaborador = idColaboradorp and idTarea = idTareap ) then
update db_cai.tareas_colaborador
set tarea = tareap
where idColaborador = idColaboradorp and idTarea = idTareap;
else
insert into db_cai.tareas_colaborador (idColaborador,tarea, idTarea)
values (idColaboradorp,tareap,idTareap);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarTipoEquipo`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarTipoEquipo`(idTipoEquipop int,TipoEquipop varchar(100),Observacionesp varchar(150))
BEGIN
if exists (select * from db_cai.tipo_equipo where idTipoEquipo = idTipoEquipop) then
update db_cai.tipo_equipo
set tipoEquipo = TipoEquipop, observaciones = observacionesp, estado = 1
where idTipoEquipo = idTipoEquipop;
else
insert into db_cai.tipo_equipo (tipoEquipo,observaciones,estado)
values (TipoEquipop,Observacionesp,1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_GuardarTipoEquipoEspacio`;
DELIMITER |
CREATE PROCEDURE `sp_GuardarTipoEquipoEspacio`(idTipoEquipop int, idEspaciop int, cantidadp int,Observacionesp varchar(150))
BEGIN
if exists (select * from db_cai.tipoequipo_espacio where idEspacio = idEspaciop and idTipoEquipo = idTipoEquipop) then
update db_cai.tipoequipo_espacio
set idTipoEquipo = idTipoEquipop, cantidad = cantidadp, observaciones = Observacionesp, estado = 1
where idEspacio = idEspaciop and idTipoEquipo = idTipoEquipop;
else
insert into db_cai.tipoequipo_espacio(idTipoEquipo, idEspacio, cantidad, observaciones,estado)
values (idTipoEquipop, idEspaciop, cantidadp, Observacionesp, 1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_obtenerMesesEvento`;
DELIMITER |
CREATE PROCEDURE `sp_obtenerMesesEvento`(annop varchar(10))
begin
set @months = -1;
select monthname(date_range) as Mes,month(date_range) as idMes from (select (date_add((select min(fecha_Inicio) from evento),
INTERVAL (@months := @months +1 ) month)) as date_range from mysql.help_topic a limit 0,1000) a
where a.date_range
between (select min(fecha_Inicio) from evento) and last_day((select max(fecha_final) from evento)) and year(date_range) like '%2018%'
group by Mes order by month(date_range);
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_obtenerUsoMensual`;
DELIMITER |
CREATE PROCEDURE `sp_obtenerUsoMensual`(idEspaciop int, idMesp int)
BEGIN
select count(a.numero_Identificacion) as participantes from asistencia_participantes a
inner join evento_diario ed on ed.idEventoDiario = a.idEventoDiario
inner join evento e on e.idEvento = ed.idEvento
inner join espacio es on  es.idEspacio = e.idEspacio
where a.Asistencia = 1 and e.idEspacio = idEspaciop and month(ed.fecha_EventoDiario) = idMesp;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_Ocupacion`;
DELIMITER |
CREATE PROCEDURE `sp_Ocupacion`(idOcupacionp int, descripcion_Ocupacionp varchar(100), observaciones_Ocupacionp varchar(100))
BEGIN
if exists (select * from db_cai.ocupacion where idOcupacion = idOcupacionp) then
update db_cai.ocupacion
set descripcion_Ocupacion = descripcion_Ocupacionp ,observaciones_Ocupacion = observaciones_Ocupacionp,estado = 1
where idOcupacion = idOcupacionp;
else
insert into db_cai.ocupacion (idOcupacion, descripcion_Ocupacion,observaciones_Ocupacion,estado)
values (idOcupacionp, descripcion_Ocupacionp,observaciones_Ocupacionp,1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_periodo`;
DELIMITER |
CREATE PROCEDURE `sp_periodo`(idPeriodop int, periodo_descripcionp varchar(50), observacionesp varchar(150))
BEGIN
if exists (select * from db_cai.periodo where idPeriodo = idPeriodop) then
update db_cai.periodo
set periodo_descripcion = periodo_descripcionp,observaciones=observacionesp,estado = 1
where idPeriodo = idPeriodop;
else
insert into db_cai.periodo (idPeriodo, periodo_descripcion,observaciones,estado)
values (idPeriodop, periodo_descripcionp,observacionesp,1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_TipoEvento`;
DELIMITER |
CREATE PROCEDURE `sp_TipoEvento`(idTipoEventop int, tipoEvento_descripcionp varchar(100), observacionesp varchar(150))
BEGIN
if exists (select * from db_cai.tipo_evento where idTipoEvento = idTipoEventop) then
update db_cai.tipo_evento
set tipoEvento_descripcion = tipoEvento_descripcionp , observaciones = observacionesp,estado = 1
where idTipoEvento = idTipoEventop;
else
insert into db_cai.tipo_evento (idTipoEvento, tipoEvento_descripcion,observaciones,estado)
values (idTipoEventop, tipoEvento_descripcionp,observacionesp,1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_TipoPersona`;
DELIMITER |
CREATE PROCEDURE `sp_TipoPersona`(idTipoPersonap int, descripcionp varchar(50), observacionesp varchar(100))
BEGIN
if exists (select * from db_cai.tipo_persona where idTipoPersona = idTipoPersonap) then
update db_cai.tipo_persona
set descripcion = descripcionp,observaciones=observacionesp,estado = 1
where idTipoPersona = idTipoPersonap;
else
insert into db_cai.tipo_persona(idTipoPersona, descripcion,observaciones,estado)
values (idTipoPersonap, descripcionp,observacionesp,1);
end if;
END |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_UsoEspacios`;
DELIMITER |
CREATE PROCEDURE `sp_UsoEspacios`(asistenciap bit, mesp int, anno int, idespaciop int)
begin
Select idEvento,nombre_Evento,Asistencia,idEspacio,month(fecha_EventoDiario) as Mes,sum(Mujer) as Femenino,sum(Hombre) as Masculino from (
select e.idEvento, e.nombre_Evento,a.Asistencia, e.idEspacio, ed.fecha_EventoDiario,
case when p.sexo = 'female' then count(p.sexo) else 0 end as Mujer,
case when p.sexo = 'male' then count(p.sexo) else 0 end as Hombre
from asistencia_participantes a
inner join evento_diario ed on a.idEventoDiario = ed.idEventoDiario
inner join persona p on p.numero_identificacion = a.numero_Identificacion
inner join evento e on e.idEvento = ed.idEvento
where a.Asistencia = asistenciap and month(fecha_EventoDiario) = mesp and year(fecha_EventoDiario) = anno and e.idespacio = idespaciop
group by e.idevento, p.sexo)a
group by idEvento,nombre_Evento,Asistencia,idEspacio,month(fecha_EventoDiario);
end |
DELIMITER ;

DROP PROCEDURE IF EXISTS `sp_viewUsoMensual`;
DELIMITER |
CREATE PROCEDURE `sp_viewUsoMensual`(Mesp int,asistenciap bit, idEspacio int)
BEGIN
select evento.nombre_Evento,persona.sexo, count(*)
from evento,asistencia_participantes, evento_diario, persona
where evento.idEvento = evento_diario.idEvento AND evento_diario.idEventoDiario = asistencia_participantes.idEventoDiario
AND asistencia_participantes.numero_identificacion like persona.numero_identificacion
and month(evento_diario.fecha_EventoDiario) between Mesp and Mesp
and asistencia_participantes.Asistencia = asistenciap
and evento.idEspacio between idEspacio and idEspacio
group by persona.sexo;
END |
DELIMITER ;

-- 
-- Dumping views
-- 

DROP TABLE IF EXISTS `vw_asistenciamensual`;
DROP VIEW IF EXISTS `vw_asistenciamensual`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `vw_asistenciamensual` AS select `es`.`Espacio` AS `Espacio`,count(`a`.`Asistencia`) AS `total`,`d`.`fecha_EventoDiario` AS `fecha_EventoDiario` from (((`evento` `e` join `evento_diario` `d` on((`e`.`idEvento` = `d`.`idEvento`))) join `asistencia_participantes` `a` on((`a`.`idEventoDiario` = `d`.`idEventoDiario`))) join `espacio` `es` on((`e`.`idEspacio` = `es`.`idEspacio`))) where (`a`.`Asistencia` = 1);

DROP TABLE IF EXISTS `vw_evento`;
DROP VIEW IF EXISTS `vw_evento`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `vw_evento` AS select `e`.`idEvento` AS `idEvento`,`e`.`nombre_Evento` AS `nombre_Evento`,`e`.`fecha_inicio` AS `fecha_inicio`,`e`.`fecha_final` AS `fecha_final`,`e`.`hora_inicio` AS `hora_inicio`,`e`.`hora_final` AS `hora_final`,`e`.`cantidad_participantes` AS `cantidad_participantes`,`es`.`Espacio` AS `Espacio`,`ins`.`nombre_institucion` AS `nombre_institucion`,`e`.`estado` AS `estado` from ((`evento` `e` join `espacio` `es` on((`e`.`idEspacio` = `es`.`idEspacio`))) join `institucion` `ins` on((`ins`.`idInstitucion` = `e`.`idInstitucion`)));

DROP TABLE IF EXISTS `vw_eventodiarios`;
DROP VIEW IF EXISTS `vw_eventodiarios`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `vw_eventodiarios` AS select `ed`.`fecha_EventoDiario` AS `fecha_EventoDiario`,`ed`.`hora_inicio` AS `hora_inicio`,`ed`.`hora_final` AS `hora_final`,`es`.`Espacio` AS `Espacio`,`e`.`nombre_Evento` AS `nombre_Evento`,`ins`.`nombre_institucion` AS `nombre_institucion`,(select `p`.`nombre_Completo` from (`evento_tipopersona` `etp` join `persona` `p` on((`p`.`numero_identificacion` = `etp`.`numero_identificacion`))) where ((`etp`.`idTipoPersona` = 3) and (`e`.`idEvento` = `etp`.`idEvento`))) AS `Encargado`,(select count(`p`.`sexo`) from (`asistencia_participantes` `a` join `persona` `p` on((`a`.`numero_Identificacion` = `p`.`numero_identificacion`))) where ((`p`.`sexo` like 'female') and (`a`.`Asistencia` = 1) and (`a`.`idEventoDiario` = `ed`.`idEventoDiario`))) AS `Mujeres`,(select count(`p`.`sexo`) from (`asistencia_participantes` `a` join `persona` `p` on((`a`.`numero_Identificacion` = `p`.`numero_identificacion`))) where ((`p`.`sexo` like 'male') and (`a`.`Asistencia` = 1) and (`a`.`idEventoDiario` = `ed`.`idEventoDiario`))) AS `Hombres`,(select count(`a`.`numero_Identificacion`) from (`asistencia_participantes` `a` join `persona` `p` on((`a`.`numero_Identificacion` = `p`.`numero_identificacion`))) where ((`a`.`Asistencia` = 1) and (`a`.`idEventoDiario` = `ed`.`idEventoDiario`))) AS `Total`,timediff(`ed`.`hora_final`,`ed`.`hora_inicio`) AS `promedio` from (((`evento_diario` `ed` join `evento` `e` on((`ed`.`idEvento` = `e`.`idEvento`))) join `espacio` `es` on((`es`.`idEspacio` = `e`.`idEspacio`))) join `institucion` `ins` on((`ins`.`idInstitucion` = `e`.`idInstitucion`)));

DROP TABLE IF EXISTS `vw_eventoparticipants`;
DROP VIEW IF EXISTS `vw_eventoparticipants`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `vw_eventoparticipants` AS select `e`.`idEvento` AS `idEvento`,`e`.`nombre_Evento` AS `nombre_Evento`,`p`.`numero_identificacion` AS `numero_Identificacion`,`p`.`nombre_Completo` AS `nombre_Completo`,`p`.`sexo` AS `sexoid`,`s`.`descripcion` AS `sexo`,`p`.`email` AS `email`,`p`.`idOcupacion` AS `idOcupacion`,`p`.`fecha_Nacimiento` AS `fecha_Nacimiento`,`p`.`celular` AS `celular`,`p`.`observaciones_Persona` AS `observaciones_Persona` from (((`evento_tipopersona` `t` join `evento` `e` on((`t`.`idEvento` = `e`.`idEvento`))) join `persona` `p` on((`t`.`numero_identificacion` = `p`.`numero_identificacion`))) join `sexo` `s` on((`s`.`sexoId` like `p`.`sexo`))) where (`p`.`estado` = 1);

DROP TABLE IF EXISTS `vw_graficoprincipal`;
DROP VIEW IF EXISTS `vw_graficoprincipal`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `vw_graficoprincipal` AS select `a`.`idEspacio` AS `idEspacio`,sum(`a`.`January`) AS `January`,sum(`a`.`February`) AS `February`,sum(`a`.`March`) AS `March`,sum(`a`.`April`) AS `April`,sum(`a`.`June`) AS `June`,sum(`a`.`July`) AS `July`,sum(`a`.`August`) AS `August`,sum(`a`.`September`) AS `September`,sum(`a`.`November`) AS `November`,sum(`a`.`December`) AS `December` from (select `es`.`Espacio` AS `Espacio`,`es`.`idEspacio` AS `idEspacio`,(case when (monthname(`ed`.`fecha_EventoDiario`) = 'January') then count(0) else 0 end) AS `January`,(case when (monthname(`ed`.`fecha_EventoDiario`) = 'February') then count(0) else 0 end) AS `February`,(case when (monthname(`ed`.`fecha_EventoDiario`) = 'March') then count(0) else 0 end) AS `March`,(case when (monthname(`ed`.`fecha_EventoDiario`) = 'April') then count(0) else 0 end) AS `April`,(case when (monthname(`ed`.`fecha_EventoDiario`) = 'June') then count(0) else 0 end) AS `June`,(case when (monthname(`ed`.`fecha_EventoDiario`) = 'July') then count(0) else 0 end) AS `July`,(case when (monthname(`ed`.`fecha_EventoDiario`) = 'August') then count(0) else 0 end) AS `August`,(case when (monthname(`ed`.`fecha_EventoDiario`) = 'September') then count(0) else 0 end) AS `September`,(case when (monthname(`ed`.`fecha_EventoDiario`) = 'November') then count(0) else 0 end) AS `November`,(case when (monthname(`ed`.`fecha_EventoDiario`) = 'December') then count(0) else 0 end) AS `December` from (((`db_cai`.`evento_diario` `ed` join `db_cai`.`asistencia_participantes` `a` on((`a`.`idEventoDiario` = `ed`.`idEventoDiario`))) join `db_cai`.`evento` `e` on((`e`.`idEvento` = `ed`.`idEvento`))) join `db_cai`.`espacio` `es` on((`es`.`idEspacio` = `e`.`idEspacio`))) where (`a`.`Asistencia` = 1) group by month(`ed`.`fecha_EventoDiario`) order by month(`ed`.`fecha_EventoDiario`)) `a`;

DROP TABLE IF EXISTS `vw_usoespacio`;
DROP VIEW IF EXISTS `vw_usoespacio`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `vw_usoespacio` AS select `e`.`idEvento` AS `idEvento`,`e`.`nombre_Evento` AS `nombre_Evento`,`p`.`sexo` AS `sexo`,`a`.`Asistencia` AS `Asistencia`,`e`.`idEspacio` AS `idEspacio`,`ed`.`fecha_EventoDiario` AS `fecha_EventoDiario`,count(`p`.`sexo`) AS `cantidad` from (((`asistencia_participantes` `a` join `evento_diario` `ed` on((`a`.`idEventoDiario` = `ed`.`idEventoDiario`))) join `persona` `p` on((`p`.`numero_identificacion` = `a`.`numero_Identificacion`))) join `evento` `e` on((`e`.`idEvento` = `ed`.`idEvento`))) where (`a`.`Asistencia` = 1) group by `e`.`idEvento`,`p`.`sexo`;

DROP TABLE IF EXISTS `vw_usoespacios`;
DROP VIEW IF EXISTS `vw_usoespacios`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `vw_usoespacios` AS select `a`.`idEvento` AS `idEvento`,`a`.`nombre_Evento` AS `nombre_Evento`,`a`.`Asistencia` AS `Asistencia`,`a`.`idEspacio` AS `idEspacio`,month(`a`.`fecha_EventoDiario`) AS `Mes`,sum(`a`.`Mujer`) AS `Femenino`,sum(`a`.`Hombre`) AS `Masculino` from (select `e`.`idEvento` AS `idEvento`,`e`.`nombre_Evento` AS `nombre_Evento`,`a`.`Asistencia` AS `Asistencia`,`e`.`idEspacio` AS `idEspacio`,`ed`.`fecha_EventoDiario` AS `fecha_EventoDiario`,(case when (`p`.`sexo` = 'female') then count(`p`.`sexo`) else 0 end) AS `Mujer`,(case when (`p`.`sexo` = 'male') then count(`p`.`sexo`) else 0 end) AS `Hombre` from (((`db_cai`.`asistencia_participantes` `a` join `db_cai`.`evento_diario` `ed` on((`a`.`idEventoDiario` = `ed`.`idEventoDiario`))) join `db_cai`.`persona` `p` on((`p`.`numero_identificacion` = `a`.`numero_Identificacion`))) join `db_cai`.`evento` `e` on((`e`.`idEvento` = `ed`.`idEvento`))) where (`a`.`Asistencia` = 1) group by `e`.`idEvento`,`p`.`sexo`) `a` group by `a`.`idEvento`,`a`.`nombre_Evento`,`a`.`Asistencia`,`a`.`idEspacio`,month(`a`.`fecha_EventoDiario`);

DROP TABLE IF EXISTS `vw_usoespaciosexo`;
DROP VIEW IF EXISTS `vw_usoespaciosexo`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `vw_usoespaciosexo` AS select `vw_usoespacio`.`idEvento` AS `idEvento`,`vw_usoespacio`.`nombre_Evento` AS `nombre_Evento`,`vw_usoespacio`.`idEspacio` AS `idEspacio`,`vw_usoespacio`.`fecha_EventoDiario` AS `fecha_EventoDiario`,sum((case when (`vw_usoespacio`.`sexo` = 'male') then `vw_usoespacio`.`cantidad` else 0 end)) AS `Masculino`,sum((case when (`vw_usoespacio`.`sexo` = 'female') then `vw_usoespacio`.`cantidad` else 0 end)) AS `Femenino` from `vw_usoespacio`;


-- 
-- Dumping triggers
-- 

DROP TRIGGER /*!50030 IF EXISTS */ `trigger_institucion_insert`;
DELIMITER |
CREATE trigger trigger_institucion_insert after insert on datos_institucion
for each row
begin
	declare idUsuariop varchar(25); 
	set idUsuariop = (select numero_identificacion from seguridad_usuario where activo = 1);
	
    insert into seguridad_bitacora(numero_Identificacion,fecha_Accion,hora_Accion,modulo_Accesado,movimiento_Ejecutado,observaciones)
    values (idUsuariop,now(),DATE_FORMAT(now(), "%T"),'Institution Data','ADD Data',
    Concat(new.codigo_Institucion,' - ', new.nombre_Institucion, ' - ', new.nombre_Departamento, ' - ', new.idPais, ' - ', new.telefono_Institucion, ' - ', new.direccion, ' - ', new.idRepresentante, ' - ', new.rutaLogo_Institucion, ' - ', new.rutaLogo_departamento));
end |
DELIMITER ;

DROP TRIGGER /*!50030 IF EXISTS */ `trigger_institucion_update`;
DELIMITER |
CREATE trigger trigger_institucion_update after update on datos_institucion
for each row
begin
	declare idUsuariop varchar(25); 
	set idUsuariop = (select numero_identificacion from seguridad_usuario where activo = 1);
	
    insert into seguridad_bitacora(numero_Identificacion,fecha_Accion,hora_Accion,modulo_Accesado,movimiento_Ejecutado,observaciones)
    values (idUsuariop,now(),DATE_FORMAT(now(), "%T"),'Institution Data','Update Data',
    Concat('OLD VALUES: ', old.codigo_Institucion,' - ', old.nombre_Institucion, ' - ', old.nombre_Departamento, ' - ', old.idPais, ' - ', old.telefono_Institucion, ' - ', old.direccion, ' - ', old.idRepresentante, ' - ', old.rutaLogo_Institucion, ' - ', old.rutaLogo_departamento, ' ----- ', (Concat('NEW VALUES: ',new.codigo_Institucion,' - ', new.nombre_Institucion, ' - ', new.nombre_Departamento, ' - ', new.idPais, ' - ', new.telefono_Institucion, ' - ', new.direccion, ' - ', new.idRepresentante, ' - ', new.rutaLogo_Institucion, ' - ', new.rutaLogo_departamento))));
end |
DELIMITER ;


/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;


-- Dump completed on 2018-09-17 08:09:53
-- Total time: 0:0:0:0:421 (d:h:m:s:ms)
